
input {
  file {
    path => [ "/Users/library/development/benchmarking/resources/*.txt" ]
    type => "collectl"
    start_position => "beginning"
  }
}
filter {
  if [type] == "collectl" {
    grok {
      match => { "message" => "%{NUMBER:date} %{WORD:time} %{NUMBER:cpu:int} %{NUMBER:sys:int} %{NUMBER:inter:int} %{NUMBER:ctxsw:int} %{WORD:Free} %{WORD:Buff} %{WORD:Cach} %{WORD:Inac} %{WORD:Slab} %{WORD:Map} %{NUMBER:KBRead:int} %{NUMBER:Reads:int} %{NUMBER:KBWrite:int} %{NUMBER:Writes:int} %{NUMBER:KBIn:int} %{NUMBER:PktIn:int} %{NUMBER:KBOut:int} %{NUMBER:PktOut:int}" }
    }
  }
}

filter {
  if [type] == "collectl" {
    csv {
      separator => " "
    }

    mutate {

      remove_field => [column4, column6, column7, column8, column9, column10, column11, column12, column13, column14, column15, column16, column17, column18, column19, column20, column21, column22, column23, column26, column27, column28, column29, column30, column31, column32, column33, column36, column37, column38, column39]

      rename => ["column1", "DATE", "column2", "TIME", "column3", "CPU_USR", "column5", "CPU_SYS", "column24", "NET_RX_KB", "column25", "NET_TX_KB", "column34", "DSK_RD_KB", "column35", "DSK_WT_KB"]

      convert => {
                   "CPU_USR" => "integer"
                   "CPU_SYS" => "integer"
                   "NET_RX_KB" => "integer"
                   "NET_TX_KB" => "integer"
                   "DSK_RD_KB" => "integer"
                   "DSK_WT_KB" => "integer"
                 }
                 
      add_field => {
        "TIMESTAMP" => "%{DATE}%{TIME}"
      } 

      remove_field => ["DATE", "TIME"]
    }

    date {
      match => ["TIMESTAMP", "yyyyMMddHH:mm:ss"]
      target => "@timestamp"
      locale => "en"
      timezone => "America/New_York"
    }
    
  }
}


output {
  elasticsearch {
    action => "index"
    hosts => "127.0.0.1"
    index => "logstash-%{+YYYY.MM.dd}"
    workers => 1
  }
  #stdout {
  #  codec => rubydebug
  #}}
}
